# Namespace for all applications
apiVersion: v1
kind: Namespace
metadata:
  name: webapps

---
# ConfigMap for App1 HTML content
apiVersion: v1
kind: ConfigMap
metadata:
  name: app1-html
  namespace: webapps
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>App 1</title>
        <style>
            body { font-family: Arial; text-align: center; padding: 50px; background: #e3f2fd; }
            h1 { color: #1976d2; }
        </style>
    </head>
    <body>
        <h1>Application 1</h1>
        <p>This is App1 (app1.com)</p>
    </body>
    </html>

---
# ConfigMap for App2 HTML content
apiVersion: v1
kind: ConfigMap
metadata:
  name: app2-html
  namespace: webapps
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>App 2</title>
        <style>
            body { font-family: Arial; text-align: center; padding: 50px; background: #f3e5f5; }
            h1 { color: #7b1fa2; }
        </style>
    </head>
    <body>
        <h1>Application 2</h1>
        <p>This is App2 (app2.com) - Running with 3 replicas</p>
    </body>
    </html>

---
# ConfigMap for App3 HTML content
apiVersion: v1
kind: ConfigMap
metadata:
  name: app3-html
  namespace: webapps
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>App 3</title>
        <style>
            body { font-family: Arial; text-align: center; padding: 50px; background: #e8f5e9; }
            h1 { color: #388e3c; }
        </style>
    </head>
    <body>
        <h1>Application 3</h1>
        <p>This is App3 (default application)</p>
    </body>
    </html>

---
# Deployment for App1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  namespace: webapps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: app1-html

---
# Deployment for App2 (3 replicas as required)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  namespace: webapps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: app2-html

---
# Deployment for App3
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3
  namespace: webapps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: app3-html

---
# Service for App1
apiVersion: v1
kind: Service
metadata:
  name: app1-service
  namespace: webapps
spec:
  selector:
    app: app1
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
# Service for App2
apiVersion: v1
kind: Service
metadata:
  name: app2-service
  namespace: webapps
spec:
  selector:
    app: app2
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
# Service for App3
apiVersion: v1
kind: Service
metadata:
  name: app3-service
  namespace: webapps
spec:
  selector:
    app: app3
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
# Ingress for host-based routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apps-ingress
  namespace: webapps
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  # Route for app1.com
  - host: app1.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1-service
            port:
              number: 80
  
  # Route for app2.com
  - host: app2.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app2-service
            port:
              number: 80
  
  # Default route (catch-all) for app3
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app3-service
            port:
              number: 80
